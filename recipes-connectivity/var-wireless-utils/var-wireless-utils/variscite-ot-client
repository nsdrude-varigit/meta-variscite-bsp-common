#!/bin/sh -e

IF_NAME="wpan0"

check_daemon() {
    if ! pgrep ot-daemon > /dev/null 2>&1; then
        echo "Error: ot-daemon is not running. Please start it before proceeding."
        exit 100  # Exit with custom error code
    fi
}

start_client() {
    # Check if a network key argument was provided
    if [ "$#" -ne 1 ]; then
        echo "Usage: $0 start NETWORK_KEY"
        exit 1
    fi

    NETWORK_KEY="$1"

    # Stop any running thread and bring the interface down
    ot-ctl -I "${IF_NAME}" thread stop > /dev/null 2>&1
    ot-ctl -I "${IF_NAME}" ifconfig down > /dev/null 2>&1

    # Reset to factory defaults, set the configuration, and then bring the interface up
    ot-ctl -I "${IF_NAME}" factoryreset > /dev/null 2>&1 && sleep 2
    ot-ctl -I "${IF_NAME}" channel 26 > /dev/null 2>&1
    ot-ctl -I "${IF_NAME}" panid 0x1234 > /dev/null 2>&1
    ot-ctl -I "${IF_NAME}" extpanid dead00beef00cafe > /dev/null 2>&1
    ot-ctl -I "${IF_NAME}" networkkey "$NETWORK_KEY" > /dev/null 2>&1
    ot-ctl -I "${IF_NAME}" networkname ThreadTest > /dev/null 2>&1
    ot-ctl -I "${IF_NAME}" ifconfig up > /dev/null 2>&1
    ot-ctl -I "${IF_NAME}" thread start > /dev/null 2>&1
    ot-ctl -I "${IF_NAME}" mode rn

    echo "Scanning for available networks:"
    ot-ctl -I "${IF_NAME}" scan

    COUNTER=0
    while [ $COUNTER -lt 10 ]; do
        # Fetch the current state using ot-ctl and extract the relevant state
        CURRENT_STATE=$(ot-ctl -I "${IF_NAME}" state | awk '/child|router|leader|detached/ { print $1 }' | tr -d '\r')

        # Check if the current state is "child" or "router" indicating it's connected to the network
        if [ "${CURRENT_STATE}" = "child" ] || [ "${CURRENT_STATE}" = "router" ]; then
            echo "State is ${CURRENT_STATE}, connected to the network"
            exit 0
        else
            echo "State is ${CURRENT_STATE}, waiting to connect to the network"
            sleep 1  # Wait for 1 second before checking again
        fi
        COUNTER=$(expr $COUNTER + 1)
    done

    echo "Timeout reached without connecting to the network."
    exit 1
}

stop_client() {
    # Stop any running thread and bring the interface down
    ot-ctl -I "${IF_NAME}" thread stop > /dev/null 2>&1
    ot-ctl -I "${IF_NAME}" ifconfig down > /dev/null 2>&1
}

# Check if ot-daemon is running
check_daemon

case "$1" in
    start)
        shift  # Remove the first argument (start) to pass NETWORK_KEY to start_client function
        start_client "$@"
        ;;
    stop)
        stop_client
        ;;
    *)
        echo "Usage: $0 {start NETWORK_KEY|stop}"
        exit 2
        ;;
esac
